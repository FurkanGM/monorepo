version: "3.3"
services:
  app:
    build:
      context: ../../
      dockerfile: ./apps/pano/Dockerfile.dev
    entrypoint: ["turbo", "run", "docker:dev", "--scope=@kampus-apps/pano"]
    ports:
      - "3000:3000"
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://pgtest:pgtest@postgres:5432/pgtest?schema=public&connect_timeout=300
      - SESSION_SECRET=sessionsecret
      - NODE_ENV=development
      - GITHUB_CLIENT_ID=22fe15b4045649c8910b
      - GITHUB_CLIENT_SECRET=3f0c8fd8e2e019713eb08315a729d80f13de3a79
      - DISCORD_CLIENT_ID=1064152490054000720
      - DISCORD_CLIENT_SECRET=SsNVywtRRhy19BbdizWol-cmYFK4-EWH
      - TWITCH_CLIENT_ID=xplilpzx8tksu8myk0ulpoez649xo9
      - TWITCH_CLIENT_SECRET=lm13an3qn9yzhtz6jqoz8gnf0fkmff
      - SEND_IN_BLUE_API_KEY=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
    volumes:
      - ./src:/app/apps/pano/src
      - ./prisma:/app/apps/pano/prisma
      - ./public:/app/apps/pano/public
      - ./remix.config.js:/app/apps/pano/remix.config.js
      - ./tsconfig.json:/app/apps/pano/tsconfig.json
    networks:
      - pano
    depends_on:
      - postgres
  postgres:
    # match the version to the RDS
    image: postgres:14.2-alpine
    environment:
      - POSTGRES_USER=pgtest
      - POSTGRES_DB=pgtest
      - POSTGRES_PASSWORD=pgtest
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5555:5432"
    healthcheck:
      test: pg_isready -U pgtest -d pgtest
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - pano
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
networks:
  pano:
